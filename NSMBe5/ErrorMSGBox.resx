<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAARdSURBVHhe7Zy9jtQwFIXnEVZaBtqtQEIIpgAEVCPxIPAE
        aEvKKej3EaaioaVFWtHQUKSmQCvRUNCAVlASzgnXyDvjJI4dO/Fwj3SasWNff4p/4niyUKlUqkC9vnl8
        BK/hDbyFz+EKrlvMNOZhXl7Da4+kuP9DaPAKPoMbUG9vX6vf313WH1fL+vOD642/Pb5Rf39y1fzNpDMv
        r+G1LEPKYpkrqeawhIadwLxjLt7cOm4a/+m+G9RQswyWxTJZNuuQuk6k+nLFRsDsbv+guSCMaQOTdUrd
        5YFk0Ayed8SHe8v66yN3Y1OadbJuuSvLAYlA2X2au2AKcLtmDNYduZEw5ycEx8mh4sD+5WH6rjrUjEkm
        HU4485psENAp3MyOruDnZMbIWBmzhD+tEEgz1s3xrmszYzVjozQjv1A5F8FNlx1jOZLbjNnq0nkX4wYe
        B+cS4Rkzdplg8kG04bmCKtFZIR4aPON3d/52Z2lmGqGCbaljXp+tMTHNxIKCTzlzHSI8Y7ZNZudxlzgo
        kIvkopYqoWYb2Va2WZofLxRWlbBIHsuy2B5nPERBG44Nror6fPnsaf3z5XNnWg6zbsbgSuuzjIdxz84o
        gLsqQV2Xgf++/FFTv169cOZJadZJMYYQiFZXDt/FwcXbkCWLDc8oJ0QDzygUoqwPw2ZlkueMNHRLygXP
        KAfEXXhGIRDZdpmVh9+FJM8NSVfBXea406WUENvgGYWMx2Qw+C4kcTh4Q7SvISkgpqqTDMiCTARPv5B5
        E/u4lhNi6rpkLPSfkZH5YowXQDkg5qiDLMhE8HQLGVccOF0FhThlA3PAM5bJpP/pBJnOxt5tSdHQnPBo
        6cZngqldyFSleH87ZoNzw6OlG3c/3iEDN0uT7biM0fAp4NFkQjZkJLj2hcR16HOvr2MATAXPWJ6P14Jr
        X0iMXr74OATE1PDo3uUMEre5tq2GAJkDPFq2udqfSpB4zuNjrotT2AfMXODRZENGgmtfSKxyAqT7AHUp
        JzxaALbPxEic5J1HCMTc8GgzEwuufTHRdWEOD4E4BTzj2QKkfSBOCY9WgJGeLUAfeEZTQuwFqJNIu30m
        EV3GdNhnGaML6Q4LwM6FtD7KddjnUU43Ezrss5mg21kd9tnO0g3VFpsZmIwEl1vIoFv6Dntt6VPIpC+V
        HJbxz+ulkr7WdNj7tSaFjPpi3bJ0X78X6xQy69EOy3KCf9DRDj1cJA46XEThAj3eBgcdb6NInAPn0LtQ
        D1haIvmQsdAFMQc8412IIfBoWbqEHfGlSB7WQ+YxQgH6N4dYoSD9o02MUJj+1StWKFD/bBgrFKx/d40V
        Kqj4aOMKomRn+cM1hUr0L/+xsiGW3J0Zu7nzssEzMhBLHROtMS8/PFuoXD+8EysEop9+ihUC0o+PjSEE
        p5+/ixUCncUHGAnOjHWMScIrRwYk3DQmxfvmXbMO644rE9yu2AhYP0I7htAw/QzyWEKDuRjXD3GrVKpp
        tFj8ATufZqKnSq8nAAAAAElFTkSuQmCC
</value>
  </data>
</root>